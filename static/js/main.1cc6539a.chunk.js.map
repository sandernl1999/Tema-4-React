{"version":3,"sources":["components/TodoSkjema.js","components/Todo.js","components/TodoListe.js","App.js","index.js"],"names":["TodoForm","props","useState","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","value","className","onSubmit","preventDefault","id","Math","floor","random","text","edit","type","placeholder","name","onChange","ref","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","TodoSkjema","tabIndex","map","todo","index","isComplete","onClick","TodoListe","setTodos","role","aria-label","test","newTodos","console","log","updatedTodos","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1cc6539a.chunk.js","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\n\nfunction TodoForm(props) {\n    const [input, setInput] = useState(''\n     );\n\n    const inputRef = useRef(null)\n\n    useEffect(() => {\n        inputRef.current.focus()\n    })\n\n    const handleChange = e => {\n        setInput(e.target.value);\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        /*Setter tallet til 10 000 slik at sjangsen for √• f√• samme ID blir liten*/ \n        props.onSubmit({\n         id: Math.floor(Math.random() * 10000),\n         text: input\n        });\n\n        setInput('');\n\n    };\n\n/*Innmat som vises utad. Buttons og placeholders som viser hvordan appen skal brukes */ \n    return (\n        <form className='todo-form' onSubmit={handleSubmit}>\n           {props.edit ? (\n            <>   \n          <input\n          type='text'\n          placeholder='...'\n          value={input}\n          name='text'\n          className='todo-input edit'\n          onChange={handleChange}\n          ref={inputRef}\n          />\n          <button className='todo-button edit'>Oppdater</button> \n          </>\n           ) : (\n           <>\n          <input\n          type='text'\n          placeholder='Legg til film...'\n          value={input}\n          name='text'\n          className='todo-input'\n          onChange={handleChange}\n          ref={inputRef}\n          />\n          <button className='todo-button'>Lagre</button>\n          </>\n        )}\n        </form>\n         );\n\n             }\n\n\nexport default TodoForm;\n","import React, {useState} from 'react'\nimport TodoSkjema from './TodoSkjema'\nimport {RiCloseCircleLine} from 'react-icons/ri'\nimport {TiEdit} from 'react-icons/ti'\n\n/*Lage ulike funksjoner til appen. Lagre, fjerne, fullf√∏re og oppdatere en \"Todo\"*/\nfunction Todo({todos, completeTodo, removeTodo, updateTodo }) {\n    const [edit, setEdit] = useState({\n        id: null,\n        value: ''\n    });\n\n\n    const submitUpdate = value => {\n        updateTodo(edit.id, value)\n        setEdit({\n            id:null,\n            value: ''\n        })\n    }\n\n    if(edit.id) {\n        return <TodoSkjema edit={edit} tabIndex=\"0\" onSubmit={submitUpdate} />;\n    }               \n\n     /*Pakker inn samhandlingen mellom kolonner og valg i et div*/\n    return todos.map((todo, index) => (\n     <div className={todo.isComplete ? 'todo-row complete': \n    'todo-row'} tabIndex=\"0\" key={index}>\n\n   <div key={todo.id} onClick={() => completeTodo(todo.id)}>\n      {todo.text}\n      </div>\n\n      {/*react-icons, ikonene \"exit\" og \"rewrite\" i appen*/\n      /*Man m√• huske √• importere fra react-icons. \n      onClick legges til for at ikonet skal reagere n√•r det trykkes p√•*/}\n    \n        \n        <div className=\"icons\">\n        <RiCloseCircleLine \n          onClick={() => removeTodo(todo.id)}\n          className='delete-icon' tabIndex=\"0\"\n          />\n\n        \n          <TiEdit\n          onClick={() => setEdit({ id: todo.id, value: todo.text })}\n          className='edit-icon' tabIndex=\"0\"\n          />   \n     </div>\n     </div>\n    \n    \n    ));\n}\n\nexport default Todo\n","/*Importer og samhandling mellom de ulike komponentene*/\nimport React, {useState} from 'react'\nimport TodoSkjema from './TodoSkjema'\nimport Todo from './Todo';\n\n\nfunction TodoListe() {\n    const [todos, setTodos] = useState([])\n\n    /*Legge til en/ny Todo/filmtittel*/\n    const addTodo = todo => {\n        if (!todo.text || /^\\s*$/.test(todo.text))  {\n            return;\n        }\n\n        const newTodos = [todo, ...todos];\n\n        setTodos(newTodos);\n        console.log(...todos);\n    };\n\n    /*Oppdatere en Todo/filmtittel*/\n    const updateTodo =(todoId, newValue) => {\n        if (!newValue.text || /^\\s*$/.test(newValue.text))  {\n            return; \n    }\n\n    setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item))\n    );\n   };\n\n    /*Fjerne en Todo/filmtittel*/\n     const removeTodo = id => {\n         const removeArr = [...todos].filter(todo => todo.id !== id);\n\n         setTodos(removeArr);\n     };\n\n   /*Fullf√∏re en Todo/filmtittel, (trykke p√• tittelen)*/\n    const completeTodo = id => {\n        let updatedTodos = todos.map(todo => {\n            if (todo.id === id) {\n                todo.isComplete = !todo.isComplete;\n            }\n            return todo;\n        });\n        setTodos(updatedTodos);\n    };\n\n    /*Applikasjonen. Overskrift og de ulike funksjonene: Legge til,\n     fullf√∏re, fjerne og oppdatere*/\n    return (\n        <div>\n        <p> <span role=\"img\" aria-label=\"movie-emojis\">üé¨ üéûÔ∏è</span></p>\n         <h1>Karantenelista</h1>   \n         <TodoSkjema onSubmit={addTodo} />\n         <Todo \n         todos={todos}\n         completeTodo={completeTodo}\n         removeTodo={removeTodo}\n         updateTodo={updateTodo}\n         />\n        </div>\n    );\n}\n\nexport default TodoListe;\n","import React from 'react';\nimport './App.css';\nimport TodoListe from './components/TodoListe';\n\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n     <TodoListe />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}